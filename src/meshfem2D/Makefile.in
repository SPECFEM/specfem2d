
#========================================================================
#
#                   S P E C F E M 2 D  Version 6.1
#                   ------------------------------
#
# Copyright Universite de Pau, CNRS and INRIA, France,
# and Princeton University / California Institute of Technology, USA.
# Contributors: Dimitri Komatitsch, dimitri DOT komatitsch aT univ-pau DOT fr
#               Nicolas Le Goff, nicolas DOT legoff aT univ-pau DOT fr
#               Roland Martin, roland DOT martin aT univ-pau DOT fr
#               Christina Morency, cmorency aT princeton DOT edu
#
# This software is a computer program whose purpose is to solve
# the two-dimensional viscoelastic anisotropic or poroelastic wave equation
# using a spectral-element method (SEM).
#
# This software is governed by the CeCILL license under French law and
# abiding by the rules of distribution of free software. You can use,
# modify and/or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info".
#
# As a counterpart to the access to the source code and rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty and the software's author, the holder of the
# economic rights, and the successive licensors have only limited
# liability.
#
# In this respect, the user's attention is drawn to the risks associated
# with loading, using, modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean that it is complicated to manipulate, and that also
# therefore means that it is reserved for developers and experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or
# data to be ensured and, more generally, to use and operate it in the
# same conditions as regards security.
#
# The full text of the license is available in file "LICENSE".
#
#========================================================================

# @configure_input@

FC = @FC@
FCFLAGS = #@FCFLAGS@

MPIFC = @MPIFC@
MPILIBS = @MPILIBS@

FLAGS_CHECK = @FLAGS_CHECK@ -I../../setup
FLAGS_NO_CHECK = @FLAGS_NO_CHECK@ -I../../setup

CC = @CC@
CPPFLAGS = @CPPFLAGS@ $(COND_MPI_CPPFLAGS)
CFLAGS = @CFLAGS@ $(CPPFLAGS) -I../../setup

## serial or parallel
@COND_MPI_TRUE@F90 = $(MPIFC) $(FCFLAGS) -DUSE_MPI -DUSE_SCOTCH -I"@SCOTCH_INCLUDEDIR@" $(MPILIBS)
@COND_MPI_FALSE@F90 = $(FC) $(FCFLAGS)

## scotch libraries
@COND_MPI_TRUE@LIB = -L"@SCOTCH_LIBDIR@" -lscotch -lscotcherr
@COND_MPI_FALSE@LIB =

# optional: uncomment this to use more than one processor core, in which case the SCOTCH graph partitioner is needed
#LIB = ../../scotch_5.1.10b/lib/libscotch.a ../../scotch_5.1.10b/lib/libscotcherr.a

LINK = $(F90)

## compilation directories
# E : executables directory
E = ../../bin
# O : objects directory
O = ../../obj
# SHARED : shared directoy
SHARED = ../shared
# S : source file directory
S = .
## setup file directory
SETUP = ../../setup


##.PHONY: clean default all backup bak generate_databases specfem3D meshfem3D

####
#### targets
####

# default targets for the pure Fortran version
@COND_PYRE_FALSE@DEFAULT = \
@COND_PYRE_FALSE@	meshfem2D \
@COND_PYRE_FALSE@	check_quality_external_mesh \
@COND_PYRE_FALSE@	$(EMPTY_MACRO)



OBJS_MESHFEM2D = \
	$O/get_node_number.o \
	$O/part_unstruct.o \
	$O/read_interfaces_file.o \
	$O/read_materials.o \
	$O/read_parameter_file.o \
	$O/read_regions.o \
	$O/read_source_file.o \
	$O/read_value_parameters.o \
	$O/save_databases.o \
	$O/save_gnuplot_file.o \
	$O/save_stations_file.o \
	$O/spline_routines.o \
	$O/meshfem2D.o

default: scotch $(DEFAULT)

all: clean default

mesh : meshfem2D
meshfem2D: xmeshfem2D
check_quality_external_mesh: xcheck_quality_external_mesh


scotch:
ifeq (@USE_BUNDLED_SCOTCH@,1)
	(echo "Using bundled Scotch")
	(cd "@SCOTCH_DIR@/src"; make)
else
	(echo "Not using bundled Scotch")
endif


clean:
	(rm -rf $O/*.o $E/xmeshfem2D $E/xmeshfem2D.trace \
	$O/*.il *.mod core \
	$E/xcheck_quality_external_mesh \
	*.oo *.ipo)


help:
	@echo "usage: make [executable]"
	@echo ""
	@echo "supported executables:"
	@echo "    xmeshfem3D"
	@echo "    xcheck_quality_external_mesh"
	@echo ""

##
## mesher
##
xmeshfem2D: $(OBJS_MESHFEM2D)
	$(LINK) $(FLAGS_CHECK) -o ${E}/xmeshfem2D $(OBJS_MESHFEM2D) $(LIB)

##
## check_quality_external_mesh
##
xcheck_quality_external_mesh: $O/check_quality_external_mesh.o $O/read_value_parameters.o
	${F90} $(FLAGS_CHECK) -o ${E}/xcheck_quality_external_mesh $O/check_quality_external_mesh.o $O/read_value_parameters.o

##
## object files
##

##
## meshfem2D
##

$O/get_node_number.o: ${S}/get_node_number.f90
	${F90} $(FLAGS_CHECK) -c -o $O/get_node_number.o ${S}/get_node_number.f90

$O/meshfem2D.o: ${S}/meshfem2D.F90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/meshfem2D.o ${S}/meshfem2D.F90

$O/part_unstruct.o: ${S}/part_unstruct.F90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/part_unstruct.o ${S}/part_unstruct.F90

$O/read_interfaces_file.o: ${S}/read_interfaces_file.f90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/read_interfaces_file.o ${S}/read_interfaces_file.f90

$O/read_materials.o: ${S}/read_materials.f90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/read_materials.o ${S}/read_materials.f90

$O/read_parameter_file.o: ${S}/read_parameter_file.F90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/read_parameter_file.o ${S}/read_parameter_file.F90

$O/read_regions.o: ${S}/read_regions.f90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/read_regions.o ${S}/read_regions.f90

$O/read_source_file.o: ${S}/read_source_file.f90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/read_source_file.o ${S}/read_source_file.f90

$O/save_databases.o: ${S}/save_databases.f90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/save_databases.o ${S}/save_databases.f90

$O/save_gnuplot_file.o: ${S}/save_gnuplot_file.f90
	${F90} $(FLAGS_CHECK) -c -o $O/save_gnuplot_file.o ${S}/save_gnuplot_file.f90

$O/save_stations_file.o: ${S}/save_stations_file.f90
	${F90} $(FLAGS_CHECK) -c -o $O/save_stations_file.o ${S}/save_stations_file.f90

$O/spline_routines.o: ${S}/spline_routines.f90 ${SETUP}/constants.h
	${F90} $(FLAGS_CHECK) -c -o $O/spline_routines.o ${S}/spline_routines.f90

##
## check_quality_external_mesh
##

$O/check_quality_external_mesh.o: ${SHARED}/check_quality_external_mesh.f90
	${F90} $(FLAGS_CHECK) -c -o $O/check_quality_external_mesh.o ${SHARED}/check_quality_external_mesh.f90

##
## shared
## 
$O/read_value_parameters.o: ${SHARED}/read_value_parameters.f90
	${F90} $(FLAGS_CHECK) -c -o $O/read_value_parameters.o ${SHARED}/read_value_parameters.f90



