/*
!========================================================================
!
!                            S P E C F E M 2 D
!                            -----------------
!
!     Main historical authors: Dimitri Komatitsch and Jeroen Tromp
!                        Princeton University, USA
!                and CNRS / University of Marseille, France
!                 (there are currently many more authors!)
! (c) Princeton University and CNRS / University of Marseille, April 2014
!
! This software is a computer program whose purpose is to solve
! the two-dimensional viscoelastic anisotropic or poroelastic wave equation
! using a spectral-element method (SEM).
!
! This program is free software; you can redistribute it and/or modify
! it under the terms of the GNU General Public License as published by
! the Free Software Foundation; either version 3 of the License, or
! (at your option) any later version.
!
! This program is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
! GNU General Public License for more details.
!
! You should have received a copy of the GNU General Public License along
! with this program; if not, write to the Free Software Foundation, Inc.,
! 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
!
! The full text of the license is available in file "LICENSE".
!
!========================================================================
*/

// this file has been automatically generated by script utils/create_specfem2D_gpu_cuda_kernel_proto.pl

#ifndef KERNEL_PROTO_CUDA_H
#define KERNEL_PROTO_CUDA_H

// prototype definitions from cuda kernel files


//
// src/gpu/kernels/Kernel_2_acoustic_impl.cu
//

template<int FORWARD_OR_ADJOINT> __global__ void
Kernel_2_acoustic_impl(const int nb_blocks_to_compute,
                       const int* d_ibool,
                       const int* d_phase_ispec_inner_acoustic,
                       const int num_phase_ispec_acoustic,
                       const int d_iphase,
                       realw_const_p d_potential_acoustic,
                       realw_p d_potential_dot_dot_acoustic,
                       realw_const_p d_b_potential_acoustic,
                       realw_p d_b_potential_dot_dot_acoustic,
                       const int nb_field,
                       const realw* d_xix, const realw* d_xiz,
                       const realw* d_gammax,const realw* d_gammaz,
                       realw_const_p d_hprime_xx,
                       realw_const_p d_hprimewgll_xx,
                       realw_const_p d_wxgll,
                       const realw* d_rhostore,
                       int PML,
                       int* d_spec_to_pml);

template<int FORWARD_OR_ADJOINT> __global__ void
Kernel_2_acoustic_PML_impl(const int nb_blocks_to_compute,
                           const int* d_ibool,
                           const int* d_phase_ispec_inner_acoustic,
                           const int num_phase_ispec_acoustic,
                           const int d_iphase,
                           realw_const_p d_potential_acoustic,
                           realw_p d_potential_dot_dot_acoustic,
                           const realw* d_xix, const realw* d_xiz,
                           const realw* d_gammax,const realw* d_gammaz,
                           realw_const_p d_hprime_xx,
                           realw_const_p d_hprimewgll_xx,
                           realw_const_p d_wxgll,
                           const realw* d_rhostore,
                           int* d_spec_to_pml,
                           realw ALPHA_MAX_PML,
                           realw d0,
                           realw* abs_normalized,
                           int NSPEC_PML_X,
                           int NSPEC_PML_Z,
                           realw deltat,
                           realw* PML_dpotentialdxl_old,
                           realw* PML_dpotentialdzl_old,
                           realw* d_potential_old,
                           realw* rmemory_acoustic_dux_dx,
                           realw* rmemory_acoustic_dux_dz,
                           realw* rmemory_acoustic_dux_dx2,
                           realw* rmemory_acoustic_dux_dz2,
                           realw* rmemory_pot_acoustic,
                           realw* rmemory_pot_acoustic2,
                           realw_p potential_dot,
                           realw* d_kappastore,
                           realw* alphax_store,
                           realw* alphaz_store,
                           realw* betax_store,
                           realw* betaz_store);

template<int FORWARD_OR_ADJOINT> __global__ void
Kernel_2_viscoacoustic_impl(const int nb_blocks_to_compute,
                            const int* d_ibool,
                            const int* d_phase_ispec_inner_acoustic,
                            const int num_phase_ispec_acoustic,
                            const int d_iphase,
                            realw_const_p d_potential_acoustic,
                            realw_p d_potential_dot_dot_acoustic,
                            const realw* d_xix, const realw* d_xiz,
                            const realw* d_gammax,const realw* d_gammaz,
                            realw_const_p d_hprime_xx,
                            realw_const_p d_hprimewgll_xx,
                            realw_const_p d_wxgll,
                            const realw* d_rhostore,
                            realw_p d_e1_acous,
                            const realw* d_A_newmark,
                            const realw* d_B_newmark,
                            realw_p d_sum_forces_old);


//
// src/gpu/kernels/Kernel_2_viscoelastic_impl.cu
//

template<int FORWARD_OR_ADJOINT> __global__ void
Kernel_2_noatt_iso_impl(const int nb_blocks_to_compute,
                        const int* d_ibool,
                        const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                        const int d_iphase,
                        realw_const_p d_displ,
                        realw_p d_accel,
                        realw* d_xix,realw* d_xiz,
                        realw* d_gammax,realw* d_gammaz,
                        realw_const_p d_hprime_xx,
                        realw_const_p d_hprimewgll_xx,
                        realw_const_p wxgll,
                        realw* d_kappav,
                        realw* d_muv,
                        const int simulation_type,
                        const int p_sv);

template<int FORWARD_OR_ADJOINT> __global__ void
Kernel_2_noatt_ani_impl(int nb_blocks_to_compute,
                        const int* d_ibool,
                        const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                        const int d_iphase,
                        realw_const_p d_displ,
                        realw_p d_accel,
                        realw* d_xix,realw* d_xiz,
                        realw* d_gammax,realw* d_gammaz,
                        realw_const_p d_hprime_xx,
                        realw_const_p d_hprimewgll_xx,
                        realw_const_p wxgll,
                        realw_const_p d_kappav,
                        realw_const_p d_muv,
                        const int simulation_type,
                        const int p_sv,
                        const int* ispec_is_anisotropic,
                        realw* d_c11store,realw* d_c12store,realw* d_c13store,
                        realw* d_c15store,
                        realw* d_c23store,
                        realw* d_c25store,realw* d_c33store,
                        realw* d_c35store,
                        realw* d_c55store) ;

template<int FORWARD_OR_ADJOINT> __global__ void
Kernel_2_att_iso_impl(const int nb_blocks_to_compute,
                      const int* d_ibool,
                      const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                      const int d_iphase,
                      realw_const_p d_displ,
                      realw_p d_accel,
                      realw* d_xix,realw* d_xiz,
                      realw* d_gammax,realw* d_gammaz,
                      realw_const_p d_hprime_xx,
                      realw_const_p d_hprimewgll_xx,
                      realw_const_p wxgll,
                      realw* d_kappav,
                      realw* d_muv,
                      const int simulation_type,
                      const int p_sv,
                      realw_const_p A_newmark_mu,realw_const_p B_newmark_mu,
                      realw_const_p A_newmark_kappa,realw_const_p B_newmark_kappa,
                      realw_p e1,realw_p e11,realw_p e13,
                      realw_p dux_dxl_old,realw_p duz_dzl_old,realw_p dux_dzl_plus_duz_dxl_old);

template<int FORWARD_OR_ADJOINT> __global__ void
Kernel_2_att_ani_impl(int nb_blocks_to_compute,
                      const int* d_ibool,
                      const int* d_phase_ispec_inner_elastic,const int num_phase_ispec_elastic,
                      const int d_iphase,
                      realw_const_p d_displ,
                      realw_p d_accel,
                      realw* d_xix,realw* d_xiz,
                      realw* d_gammax,realw* d_gammaz,
                      realw_const_p d_hprime_xx,
                      realw_const_p d_hprimewgll_xx,
                      realw_const_p wxgll,
                      realw_const_p d_kappav,
                      realw_const_p d_muv,
                      const int simulation_type,
                      const int p_sv,
                      const int* ispec_is_anisotropic,
                      realw* d_c11store,realw* d_c12store,realw* d_c13store,
                      realw* d_c15store,
                      realw* d_c23store,
                      realw* d_c25store,realw* d_c33store,
                      realw* d_c35store,
                      realw* d_c55store,
                      realw_const_p A_newmark_mu,realw_const_p B_newmark_mu,
                      realw_const_p A_newmark_kappa,realw_const_p B_newmark_kappa,
                      realw_p e1,realw_p e11,realw_p e13,
                      realw_p dux_dxl_old,realw_p duz_dzl_old,realw_p dux_dzl_plus_duz_dxl_old) ;


//
// src/gpu/kernels/UpdateDispVeloc_kernel.cu
//

__global__ void UpdateDispVeloc_kernel(realw* displ,
                                       realw* veloc,
                                       realw* accel,
                                       int size,
                                       realw deltat,
                                       realw deltatsqover2,
                                       realw deltatover2) ;


//
// src/gpu/kernels/UpdatePotential_kernel.cu
//

__global__ void UpdatePotential_kernel(realw_p potential_acoustic,
                                       realw* potential_dot_acoustic,
                                       realw* potential_dot_dot_acoustic,
                                       int size,
                                       realw deltat,
                                       realw deltatsqover2,
                                       realw deltatover2) ;


//
// src/gpu/kernels/add_sources_ac_SIM_TYPE_2_OR_3_kernel.cu
//

__global__ void add_sources_ac_SIM_TYPE_2_OR_3_kernel(realw* potential_dot_dot_acoustic,
                                                      realw* source_adjoint,
                                                      realw* xir_store,
                                                      realw* gammar_store,
                                                      int* d_ibool,
                                                      int* ispec_is_acoustic,
                                                      int* ispec_selected_rec_loc,
                                                      int it,
                                                      int nadj_rec_local,
                                                      //realw* kappastore,
                                                      int NSTEP ) ;


//
// src/gpu/kernels/add_sources_el_SIM_TYPE_2_OR_3_kernel.cu
//

__global__ void add_sources_el_SIM_TYPE_2_OR_3_kernel(realw* accel,
                                                      realw* source_adjoint,
                                                      realw* xir_store,
                                                      realw* gammar_store,
                                                      int* d_ibool,
                                                      int* ispec_is_elastic,
                                                      int* ispec_selected_rec_loc,
                                                      int it,
                                                      int nadj_rec_local,
                                                      int NSTEP) ;


//
// src/gpu/kernels/assemble_boundary_accel_on_device_kernel.cu
//

__global__ void assemble_boundary_accel_on_device(realw* d_accel, realw* d_send_accel_buffer,
                                                  const int ninterface_el,
                                                  const int max_nibool_interfaces_ext_mesh,
                                                  const int* d_nibool_interfaces_ext_mesh,
                                                  const int* d_ibool_interfaces_ext_mesh,
                                                  const int* inum_inter_elastic) ;


//
// src/gpu/kernels/assemble_boundary_potential_on_device_kernel.cu
//

__global__ void assemble_boundary_potential_on_device(realw* d_potential_dot_dot_acoustic,
                                                      realw* d_send_potential_dot_dot_buffer,
                                                      const int ninterface_ac,
                                                      const int max_nibool_interfaces_ext_mesh,
                                                      const int* d_nibool_interfaces_ext_mesh,
                                                      const int* d_ibool_interfaces_ext_mesh,
                                                      const int* inum_inter_acoustic) ;


//
// src/gpu/kernels/compute_acoustic_seismogram_kernel.cu
//

__global__ void compute_acoustic_seismogram_kernel(int nrec_local,
                                                   realw* displ,
                                                   realw* pressure,
                                                   int* d_ibool,
                                                   realw* hxir, realw* hgammar,
                                                   realw* seismograms,
                                                   int* ispec_selected_rec_loc,
                                                   int* ispec_is_elastic,
                                                   int* ispec_is_acoustic,
                                                   realw* d_kappav,
                                                   realw* d_muv,
                                                   realw* d_hprime_xx,
                                                   realw* d_xix,realw* d_xiz,
                                                   realw* d_gammax,realw* d_gammaz,
                                                   int* ispec_is_anisotropic,
                                                   realw* d_c11store,realw* d_c12store,realw* d_c13store,
                                                   realw* d_c15store,realw* d_c23store,realw* d_c25store,
                                                   realw* d_c33store,realw* d_c35store,
                                                   int it,
                                                   int NSTEP);


//
// src/gpu/kernels/compute_add_moving_sources_acoustic_kernel.cu
//

__global__ void compute_add_moving_sources_acoustic_kernel(realw* potential_dot_dot_acoustic,
                                                           int* d_ibool,
                                                           realw* sourcearrays_moving,
                                                           realw* source_time_function_moving,
                                                           int myrank,
                                                           int* ispec_selected_source_moving,
                                                           int* ispec_is_acoustic,
                                                           realw* kappastore,
                                                           int it,
                                                           int nsources_local,
                                                           int nsources,
                                                           int NSTEP) ;


//
// src/gpu/kernels/compute_add_sources_acoustic_kernel.cu
//

__global__ void compute_add_sources_acoustic_kernel(realw* potential_dot_dot_acoustic,
                                                    int* d_ibool,
                                                    realw* sourcearrays,
                                                    realw* source_time_function,
                                                    int myrank,
                                                    int* ispec_selected_source,
                                                    int* ispec_is_acoustic,
                                                    realw* kappastore,
                                                    int it,
                                                    int nsources_local) ;


//
// src/gpu/kernels/compute_add_sources_kernel.cu
//

__global__ void compute_add_sources_kernel(realw* accel,
                                           int* d_ibool,
                                           realw* sourcearrays,
                                           realw* d_source_time_function,
                                           int myrank,
                                           int* ispec_selected_source,
                                           int* ispec_is_elastic,
                                           int it,int nsources_local) ;


//
// src/gpu/kernels/compute_coupling_acoustic_el_kernel.cu
//

__global__ void compute_coupling_acoustic_el_kernel(realw* displ,
                                                    realw* potential_dot_dot_acoustic,
                                                    int num_coupling_ac_el_faces,
                                                    int* coupling_ac_el_ispec,
                                                    int* coupling_ac_el_ijk,
                                                    realw* coupling_ac_el_normal,
                                                    realw* coupling_ac_el_jacobian1Dw,
                                                    int* d_ibool,
                                                    int simulation_type,
                                                    int backward_simulation) ;


//
// src/gpu/kernels/compute_coupling_elastic_ac_kernel.cu
//

__global__ void compute_coupling_elastic_ac_kernel(realw* potential_dot_dot_acoustic,
                                                    realw* accel,
                                                    int num_coupling_ac_el_faces,
                                                    int* coupling_ac_el_ispec,
                                                    int* coupling_ac_el_ijk,
                                                    realw* coupling_ac_el_normal,
                                                    realw* coupling_ac_el_jacobian1Dw,
                                                    int* d_ibool,
                                                    int simulation_type,
                                                    int backward_simulation) ;


//
// src/gpu/kernels/compute_elastic_seismogram_kernel.cu
//

__global__ void compute_elastic_seismogram_kernel(int nrec_local,
                                                  realw* field,
                                                  realw* field_acoustic,
                                                  int* d_ibool,
                                                  realw* hxir, realw* hgammar,
                                                  realw* seismograms,
                                                  realw* cosrot,
                                                  realw* sinrot,
                                                  int* ispec_selected_rec_loc,
                                                  int* ispec_is_elastic,
                                                  int* ispec_is_acoustic,
                                                  realw* rhostore,
                                                  realw* d_hprime_xx,
                                                  realw* d_xix,realw* d_xiz,
                                                  realw* d_gammax,realw* d_gammaz,
                                                  int it,
                                                  int NSTEP);


//
// src/gpu/kernels/compute_gradient_kernel.cu
//


//
// src/gpu/kernels/compute_kernels_acoustic_kernel.cu
//

__global__ void compute_kernels_acoustic_kernel(int* ispec_is_acoustic,
                                                int* d_ibool,
                                                realw* rhostore,
                                                realw* kappastore,
                                                realw* d_hprime_xx,
                                                realw* d_xix,realw* d_xiz,
                                                realw* d_gammax,realw* d_gammaz,
                                                realw* potential_acoustic,
                                                realw* potential_dot_dot_acoustic,
                                                realw* b_potential_acoustic,
                                                realw* rho_ac_kl,
                                                realw* kappa_ac_kl,
                                                int NSPEC_AB,
                                                realw deltat) ;


//
// src/gpu/kernels/compute_kernels_cuda_kernel.cu
//

__global__ void compute_kernels_cudakernel(const int* ispec_is_elastic,
                                           const int p_sv,
                                           const int* d_ibool,
                                           realw* displ,
                                           realw* accel,
                                           realw* b_displ,
                                           realw* rho_kl,
                                           realw* mu_kl,
                                           realw* kappa_kl,
                                           int NSPEC_AB,
                                           realw* d_hprime_xx,
                                           realw* d_xix,realw* d_xiz,
                                           realw* d_gammax,realw* d_gammaz) ;

__global__ void compute_kernels_ani_cudakernel(int* ispec_is_elastic,
                                               int* d_ibool,
                                               realw* accel,
                                               realw* b_displ,
                                               realw* epsilondev_xx,realw* epsilondev_yy,realw* epsilondev_xy,
                                               realw* epsilondev_xz,realw* epsilondev_yz,
                                               realw* b_epsilondev_xx,realw* b_epsilondev_yy,realw* b_epsilondev_xy,
                                               realw* b_epsilondev_xz,realw* b_epsilondev_yz,
                                               realw* rho_kl,
                                               realw deltat,
                                               realw* cijkl_kl,
                                               realw* epsilon_trace_over_3,
                                               realw* b_epsilon_trace_over_3,
                                               int NSPEC_AB) ;


//
// src/gpu/kernels/compute_kernels_hess_ac_cuda_kernel.cu
//

__global__ void compute_kernels_hess_el_cudakernel(int* ispec_is_elastic,
                                                   int* d_ibool,
                                                   realw* accel,
                                                   realw* b_accel,
                                                   realw* hess_kl,
                                                   int NSPEC_AB) ;

__global__ void compute_kernels_hess_ac_cudakernel(int* ispec_is_acoustic,
                                                   int* d_ibool,
                                                   realw* potential_dot_dot_acoustic,
                                                   realw* b_potential_dot_dot_acoustic,
                                                   realw* rhostore,
                                                   realw* d_hprime_xx,
                                                   realw* d_xix,realw* d_xiz,
                                                   realw* d_gammax,realw* d_gammaz,
                                                   realw* hess_kl,
                                                   int NSPEC_AB) ;


//
// src/gpu/kernels/compute_stacey_acoustic_kernel.cu
//

__global__ void compute_stacey_acoustic_kernel(realw* potential_dot_acoustic,
                                               realw* potential_dot_dot_acoustic,
                                               const int* abs_boundary_ispec,
                                               const int* abs_boundary_ijk,
                                               const realw* abs_boundary_jacobian1Dw,
                                               const int* d_ibool,
                                               const realw* rhostore,
                                               const realw* kappastore,
                                               const int* ispec_is_acoustic,
                                               const int read_abs,
                                               const int write_abs,
                                               const int UNDO_ATTENUATION_AND_OR_PML,
                                               const int compute_wavefield1,
                                               const int compute_wavefield2,
                                               const int num_abs_boundary_faces,
                                               realw* b_potential_dot_acoustic,
                                               realw* b_potential_dot_dot_acoustic,
                                               realw* b_absorb_potential_left,
                                               realw* b_absorb_potential_right,
                                               realw* b_absorb_potential_top,
                                               realw* b_absorb_potential_bottom,
                                               const int* ib_left,
                                               const int* ib_right,
                                               const int* ib_top,
                                               const int* ib_bottom,
                                               const int* edge_abs) ;


//
// src/gpu/kernels/compute_stacey_elastic_kernel.cu
//

__global__ void compute_stacey_elastic_kernel(realw* veloc,
                                              realw* accel,
                                              const int* abs_boundary_ispec,
                                              const int* abs_boundary_ijk,
                                              const realw* abs_boundary_normal,
                                              const realw* abs_boundary_jacobian1Dw,
                                              const int* d_ibool,
                                              const realw* rho_vp,
                                              const realw* rho_vs,
                                              const int* ispec_is_elastic,
                                              const int simulation_type,
                                              const int p_sv,
                                              const int SAVE_FORWARD,
                                              const int num_abs_boundary_faces,
                                              realw* b_absorb_elastic_left,
                                              realw* b_absorb_elastic_right,
                                              realw* b_absorb_elastic_top,
                                              realw* b_absorb_elastic_bottom,
                                              const int* ib_left,
                                              const int* ib_right,
                                              const int* ib_top,
                                              const int* ib_bottom,
                                              const int* edge_abs) ;

__global__ void compute_stacey_elastic_sim3_kernel(int* abs_boundary_ispec,
                                                   int* abs_boundary_ijk,
                                                   int* d_ibool,
                                                   int* ispec_is_elastic,
                                                   int num_abs_boundary_faces,
                                                   realw* b_accel,
                                                   realw* b_absorb_elastic_left,
                                                   realw* b_absorb_elastic_right,
                                                   realw* b_absorb_elastic_top,
                                                   realw* b_absorb_elastic_bottom,
                                                   int* ib_left,
                                                   int* ib_right,
                                                   int* ib_top,
                                                   int* ib_bottom,
                                                   int* d_edge_abs) ;


//
// src/gpu/kernels/enforce_free_surface_cuda_kernel.cu
//

__global__ void enforce_free_surface_cuda_kernel(realw_p potential_acoustic,
                                                 realw_p potential_dot_acoustic,
                                                 realw_p potential_dot_dot_acoustic,
                                                 const int num_free_surface_faces,
                                                 const int* free_surface_ispec,
                                                 const int* free_surface_ijk,
                                                 const int* d_ibool,
                                                 const int* ispec_is_acoustic) ;


//
// src/gpu/kernels/get_maximum_kernel.cu
//

__global__ void get_maximum_kernel(realw* array, int size, realw* d_max);


//
// src/gpu/kernels/get_maximum_vector_kernel.cu
//

__global__ void get_maximum_vector_kernel(realw* array, int size, realw* d_max);


//
// src/gpu/kernels/kernel_3_accel_cuda_device.cu
//

__global__ void kernel_3_accel_cuda_device(realw* accel,
                                           int size,
                                           realw* rmassx,
                                           realw* rmassy,
                                           realw* rmassz) ;


//
// src/gpu/kernels/kernel_3_acoustic_cuda_device.cu
//

__global__ void kernel_3_acoustic_cuda_device(realw* potential_dot_dot_acoustic,
                                              realw* b_potential_dot_dot_acoustic,
                                              realw* potential_dot_acoustic,
                                              realw* b_potential_dot_acoustic,
                                              int size,
                                              int compute_wavefield_1,
                                              int compute_wavefield_2,
                                              realw deltatover2,
                                              realw b_deltatover2,
                                              realw* rmass_acoustic) ;


//
// src/gpu/kernels/kernel_3_cuda_device.cu
//

__global__ void kernel_3_cuda_device(realw* veloc,
                                     realw* accel,
                                     int size,
                                     realw deltatover2,
                                     realw* rmassx,
                                     realw* rmassz) ;


//
// src/gpu/kernels/kernel_3_veloc_cuda_device.cu
//

__global__ void kernel_3_veloc_cuda_device(realw* veloc,
                                           realw* accel,
                                           int size,
                                           realw deltatover2) ;


//
// src/gpu/kernels/pml_boundary_acoustic_cuda_kernel.cu
//

__global__ void pml_boundary_acoustic_cuda_kernel(realw_p potential_acoustic,
                                                  realw_p potential_dot_acoustic,
                                                  realw_p potential_dot_dot_acoustic,
                                                  int pml_nglob_abs_acoustic,
                                                  const int* d_pml_abs_points_acoustic) ;


//
// src/gpu/kernels/prepare_boundary_accel_on_device_kernel.cu
//

__global__ void prepare_boundary_accel_on_device(realw* d_accel, realw* d_send_accel_buffer,
                                                 const int ninterface_el,
                                                 const int max_nibool_interfaces_ext_mesh,
                                                 const int* d_nibool_interfaces_ext_mesh,
                                                 const int* d_ibool_interfaces_ext_mesh,
                                                 const int* inum_inter_elastic) ;


//
// src/gpu/kernels/prepare_boundary_potential_on_device_kernel.cu
//

__global__ void prepare_boundary_potential_on_device(realw* d_potential_dot_dot_acoustic,
                                                     realw* d_send_potential_dot_dot_buffer,
                                                     const int ninterface_ac,
                                                     const int max_nibool_interfaces_ext_mesh,
                                                     const int* d_nibool_interfaces_ext_mesh,
                                                     const int* d_ibool_interfaces_ext_mesh,
                                                     const int* inum_inter_acoustic) ;


//
// src/gpu/kernels/process_smooth.cu
//

__global__ void process_smooth(realw_const_p xstore_me,
                               realw_const_p zstore_me,
                               realw_const_p xstore_other,
                               realw_const_p zstore_other,
                               realw_const_p data_other,
                               const realw sigma_h2_inv,
                               const realw sigma_v2_inv,
                               const int iker,
                               const int nspec_me,
                               const int nspec_other,
                               const realw v_criterion,
                               const realw h_criterion,
                               realw_const_p jacobian,
                               realw_p sum_data_smooth,
                               realw_p normalisation,
                               realw_const_p wgll_sq);

__global__ void normalize_data(realw_p data_smooth,
                               realw_const_p normalisation,
                               int nker,
                               int nspec_me);

#endif  // KERNEL_PROTO_CUDA_H

